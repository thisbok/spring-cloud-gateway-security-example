// exec-services 는 개별 프로젝트가 아닌 서브프로젝트들의 컨테이너 역할
// 이 파일은 exec-services 하위 프로젝트들의 공통 설정을 정의

description = 'Services Container - Microservices Collection'

// exec-services 자체는 실행 가능한 jar 를 생성하지 않음
configurations.archives.artifacts.clear()

subprojects {
    // exec-services 하위 프로젝트들의 공통 설정

    dependencies {
        // 모든 서비스에 공통으로 필요한 의존성
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        // 로깅
        implementation 'net.logstash.logback:logstash-logback-encoder:7.4'

        // 메트릭
        implementation 'io.micrometer:micrometer-registry-prometheus'

        // JSON 처리
        implementation 'com.fasterxml.jackson.core:jackson-databind'
        implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

        // 테스트
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.testcontainers:junit-jupiter'
        testImplementation 'org.mockito:mockito-core'
    }

    // 서비스별 jar 파일명 설정
    bootJar {
        archiveFileName = "${project.name}.jar"
    }

    // 데이터베이스 접근이 필요한 서비스는 module-core 의존성 사용 권장
    // DB 관련 의존성 (JPA, Redis, MySQL) 은 module-core 에서 제공
    configurations.configureEach { config ->
        if (config.name in ['implementation', 'api']) {
            config.resolutionStrategy.eachDependency { details ->
                // 중복 의존성 방지: module-core 에서 제공하는 의존성은 제외
                if (details.requested.group == 'org.springframework.boot' &&
                        details.requested.name == 'spring-boot-starter-data-jpa') {
                    details.because('JPA 의존성은 module-core 에서 제공')
                    details.useVersion('SKIP')
                }
                if (details.requested.group == 'org.springframework.boot' &&
                        details.requested.name == 'spring-boot-starter-data-redis') {
                    details.because('Redis 의존성은 module-core 에서 제공')
                    details.useVersion('SKIP')
                }
                if (details.requested.group == 'com.mysql' &&
                        details.requested.name == 'mysql-connector-j') {
                    details.because('MySQL 드라이버는 module-core 에서 제공')
                    details.useVersion('SKIP')
                }
            }
        }
    }
}